name: CI-CD
env:
    NODE_VERSION: '20.x'
    FOLDER: /home/brightky/applications/e-commerce/client
    IMAGE: client
    IMAGE_VERSION: latest
on:
    workflow_dispatch:
jobs:
    create-folder:
        name: Create folder
        runs-on: ubuntu-latest
        steps:
            - name: Create folder
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.HOST }}
                  port: 22
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.KEY }}
                  script: |
                    rm -R ${{ env.FOLDER }}
                    mkdir -p  ${{ env.FOLDER }}
    tests:
        name: tests
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x, 20.x, 21.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - run: npm ci
            - run: npm test

    copy:
        name: copy-files-from-git
        runs-on: ubuntu-latest
        needs: create-folder
        steps:
            - name: run docker compose with ssh
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  port: 22
                  key: ${{ secrets.KEY }}
                  script: |
                    cd ${{ env.FOLDER }}
                    git clone https://github.com/BrightkyEfoo/ecommerce-client.git .


    build:
        name: build and deploy
        runs-on: ubuntu-latest
        needs:
            - tests
            - copy
        steps:
            - name: run docker compose with ssh
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  port: 22
                  key: ${{ secrets.KEY }}
                  script: |
                        docker compose -f ${{ env.FOLDER }}/docker-compose.yml stop || true
                        docker compose -f ${{ env.FOLDER }}/docker-compose.yml rm -f || true
                        docker compose -f ${{ env.FOLDER }}/docker-compose.yml up -d
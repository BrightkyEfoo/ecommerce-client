name: 'Try it with docker'
on:
    workflow_dispatch:
    push:
        branches:
            - main
env:
    NODE_VERSION: '20.x'
    FOLDER: /home/brightky/applications/e-commerce/client
    IMAGE: ecommerce-client
    IMAGE_VERSION: latest
jobs:
    create-folder:
      name: Create folder
      runs-on: ubuntu-latest
      steps:
          - name: Create folder
            uses: appleboy/ssh-action@v1.0.3
            with:
                host: ${{ secrets.HOST }}
                port: 22
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.KEY }}
                script: |
                  rm -R ${{ env.FOLDER }}
                  mkdir -p  ${{ env.FOLDER }}
    tests:
        name: tests
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [18.x, 20.x, 21.x]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
            - run: npm ci
            - run: npm test
    dockerize:
        runs-on: ubuntu-latest
        needs: 
          - tests
        steps:
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USER_NAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}
            - name: Build and push
              uses: docker/build-push-action@v5
              with:
                  push: true
                  tags: ${{ secrets.DOCKER_USER_NAME }}/${{ env.IMAGE }}:${{ env.IMAGE_VERSION }}
    copy-configs:
      name: 'copy configs'
      runs-on: ubuntu-latest
      needs: create-folder
      steps:
        - uses: actions/checkout@master
        - name: copy file via ssh password
          uses: appleboy/scp-action@master
          with:
            host: ${{ secrets.HOST }}
            port: 22
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.KEY }}
            source: 'compose.yml'
            target: ${{ env.FOLDER }}
                
            
    build:
        name: build and deploy
        runs-on: ubuntu-latest
        needs:
            - dockerize
            - copy-configs
        steps:
            - name: run docker compose with ssh
              uses: appleboy/ssh-action@v1.0.3
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  port: 22
                  key: ${{ secrets.KEY }}
                  script: |
                        docker login --username ${{ secrets.DOCKER_USER_NAME }} --password ${{ secrets.DOCKER_PASSWORD }}
                        echo NEXT_PUBLIC_API_URI=http://${{ secrets.HOST }}:9000 > .env
                        docker compose -f ${{ env.FOLDER }}/docker-compose.yml stop || true
                        docker compose -f ${{ env.FOLDER }}/docker-compose.yml rm -f || true
                        docker compose -f ${{ env.FOLDER }}/compose.yml stop || true
                        docker compose -f ${{ env.FOLDER }}/compose.yml rm -f || true
                        docker compose -f ${{ env.FOLDER }}/compose.yml up -d